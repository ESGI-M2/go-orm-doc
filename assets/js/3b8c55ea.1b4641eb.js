"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6803],{7248:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>t,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"installation","title":"Installation et Configuration","description":"Installation","source":"@site/docs/installation.md","sourceDirName":".","slug":"/installation","permalink":"/go-orm-doc/docs/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/ESGI-M2/GO/tree/main/docs/docs/installation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Introduction","permalink":"/go-orm-doc/docs/intro"},"next":{"title":"D\xe9marrage Rapide","permalink":"/go-orm-doc/docs/quick-start"}}');var o=r(4848),a=r(8453);const s={},l="Installation et Configuration",t={},c=[{value:"Installation",id:"installation",level:2},{value:"Pr\xe9requis",id:"pr\xe9requis",level:3},{value:"Installation",id:"installation-1",level:3},{value:"V\xe9rification",id:"v\xe9rification",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Configuration Simple",id:"configuration-simple",level:3},{value:"MySQL",id:"mysql",level:4},{value:"PostgreSQL",id:"postgresql",level:4},{value:"Configuration avec Variables d&#39;Environnement",id:"configuration-avec-variables-denvironnement",level:3},{value:"Variables",id:"variables",level:4},{value:"Code",id:"code",level:4},{value:"Configuration Avanc\xe9e avec Factory",id:"configuration-avanc\xe9e-avec-factory",level:3},{value:"Mod\xe8le de base",id:"mod\xe8le-de-base",level:2},{value:"Utilisation de base",id:"utilisation-de-base",level:2},{value:"Configuration Database",id:"configuration-database",level:2},{value:"MySQL",id:"mysql-1",level:3},{value:"PostgreSQL",id:"postgresql-1",level:3},{value:"Options de Configuration",id:"options-de-configuration",level:2},{value:"Param\xe8tres de Connexion",id:"param\xe8tres-de-connexion",level:3},{value:"Configuration SSL PostgreSQL",id:"configuration-ssl-postgresql",level:3},{value:"Configuration Charset MySQL",id:"configuration-charset-mysql",level:3},{value:"Pool de Connexions",id:"pool-de-connexions",level:2},{value:"Cache",id:"cache",level:2},{value:"Logs",id:"logs",level:2},{value:"Migrations",id:"migrations",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"installation-et-configuration",children:"Installation et Configuration"})}),"\n",(0,o.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(e.h3,{id:"pr\xe9requis",children:"Pr\xe9requis"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Go 1.16 ou sup\xe9rieur"}),"\n",(0,o.jsx)(e.li,{children:"Base de donn\xe9es MySQL ou PostgreSQL"}),"\n"]}),"\n",(0,o.jsx)(e.h3,{id:"installation-1",children:"Installation"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"go get github.com/ESGI-M2/GO\n"})}),"\n",(0,o.jsx)(e.h3,{id:"v\xe9rification",children:"V\xe9rification"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "github.com/ESGI-M2/GO/orm/builder"\n)\n\nfunc main() {\n    orm := builder.NewSimpleORM()\n    if orm != nil {\n        fmt.Println("ORM GO install\xe9 avec succ\xe8s !")\n    }\n}\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"go run test.go\n"})}),"\n",(0,o.jsx)(e.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(e.h3,{id:"configuration-simple",children:"Configuration Simple"}),"\n",(0,o.jsx)(e.h4,{id:"mysql",children:"MySQL"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "log"\n    "github.com/ESGI-M2/GO/orm/builder"\n)\n\nfunc main() {\n    orm := builder.NewSimpleORM().\n        WithMySQL().\n        WithQuickConfig("localhost", "myapp", "myapp_user", "password").\n        RegisterModels(&User{})\n\n    if err := orm.Connect(); err != nil {\n        log.Fatal("Erreur de connexion:", err)\n    }\n    defer orm.Close()\n}\n'})}),"\n",(0,o.jsx)(e.h4,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "log"\n    "github.com/ESGI-M2/GO/orm/builder"\n)\n\nfunc main() {\n    orm := builder.NewSimpleORM().\n        WithPostgreSQL().\n        WithQuickConfig("localhost", "myapp", "myapp_user", "password").\n        RegisterModels(&User{})\n\n    if err := orm.Connect(); err != nil {\n        log.Fatal("Erreur de connexion:", err)\n    }\n    defer orm.Close()\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"configuration-avec-variables-denvironnement",children:"Configuration avec Variables d'Environnement"}),"\n",(0,o.jsx)(e.h4,{id:"variables",children:"Variables"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"MySQL :"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"export MYSQL_HOST=localhost\nexport MYSQL_PORT=3306\nexport MYSQL_DATABASE=myapp\nexport MYSQL_USER=myapp_user\nexport MYSQL_PASSWORD=password\n"})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"PostgreSQL :"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"export POSTGRES_HOST=localhost\nexport POSTGRES_PORT=5432\nexport POSTGRES_DB=myapp\nexport POSTGRES_USER=myapp_user\nexport POSTGRES_PASSWORD=password\n"})}),"\n",(0,o.jsx)(e.h4,{id:"code",children:"Code"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "log"\n    "github.com/ESGI-M2/GO/orm/builder"\n)\n\nfunc main() {\n    orm, err := builder.QuickSetupFromEnv("mysql", &User{})\n    if err != nil {\n        log.Fatal("Erreur de configuration:", err)\n    }\n    defer orm.Close()\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"configuration-avanc\xe9e-avec-factory",children:"Configuration Avanc\xe9e avec Factory"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "log"\n    "github.com/ESGI-M2/GO/orm/factory"\n    "github.com/ESGI-M2/GO/orm/core"\n)\n\nfunc main() {\n    dialect, err := factory.CreateDialect(factory.MySQL)\n    if err != nil {\n        log.Fatal("Erreur de cr\xe9ation du dialecte:", err)\n    }\n\n    orm := core.NewORM(dialect)\n    \n    config := interfaces.ConnectionConfig{\n        Host:     "localhost",\n        Port:     3306,\n        Database: "myapp",\n        Username: "myapp_user",\n        Password: "password",\n    }\n\n    if err := orm.Connect(config); err != nil {\n        log.Fatal("Erreur de connexion:", err)\n    }\n    defer orm.Close()\n\n    orm.RegisterModel(&User{})\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"mod\xe8le-de-base",children:"Mod\xe8le de base"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "time"\n)\n\ntype User struct {\n    ID        int       `orm:"pk,auto"`\n    Name      string    `orm:"index"`\n    Email     string    `orm:"unique"`\n    CreatedAt time.Time `orm:"column:created_at"`\n    UpdatedAt time.Time `orm:"column:updated_at"`\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"utilisation-de-base",children:"Utilisation de base"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n    "fmt"\n    "log"\n    "time"\n    \n    "github.com/ESGI-M2/GO/orm/builder"\n)\n\nfunc main() {\n    orm := builder.NewSimpleORM().\n        WithMySQL().\n        WithQuickConfig("localhost", "testdb", "user", "password").\n        RegisterModels(&User{})\n\n    if err := orm.Connect(); err != nil {\n        log.Fatal("Erreur de connexion:", err)\n    }\n    defer orm.Close()\n\n    repo := orm.Repository(&User{})\n    \n    user := &User{\n        Name:      "John Doe",\n        Email:     "john@example.com",\n        CreatedAt: time.Now(),\n        UpdatedAt: time.Now(),\n    }\n    \n    if err := repo.Save(user); err != nil {\n        log.Fatal("Erreur lors de la sauvegarde:", err)\n    }\n    \n    fmt.Printf("Utilisateur cr\xe9\xe9 avec l\'ID: %d\\n", user.ID)\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"configuration-database",children:"Configuration Database"}),"\n",(0,o.jsx)(e.h3,{id:"mysql-1",children:"MySQL"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sql",children:"CREATE DATABASE myapp;\nCREATE USER 'myapp_user'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON myapp.* TO 'myapp_user'@'localhost';\nFLUSH PRIVILEGES;\n"})}),"\n",(0,o.jsx)(e.h3,{id:"postgresql-1",children:"PostgreSQL"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sql",children:"CREATE DATABASE myapp;\nCREATE USER myapp_user WITH ENCRYPTED PASSWORD 'password';\nGRANT ALL PRIVILEGES ON DATABASE myapp TO myapp_user;\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options-de-configuration",children:"Options de Configuration"}),"\n",(0,o.jsx)(e.h3,{id:"param\xe8tres-de-connexion",children:"Param\xe8tres de Connexion"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"type ConnectionConfig struct {\n    Host     string\n    Port     int\n    Database string\n    Username string\n    Password string\n    SSLMode  string  // PostgreSQL uniquement\n    Charset  string  // MySQL uniquement\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"configuration-ssl-postgresql",children:"Configuration SSL PostgreSQL"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'config := interfaces.ConnectionConfig{\n    Host:     "localhost",\n    Port:     5432,\n    Database: "myapp",\n    Username: "myapp_user",\n    Password: "password",\n    SSLMode:  "require", // disable, require, verify-ca, verify-full\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"configuration-charset-mysql",children:"Configuration Charset MySQL"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'config := interfaces.ConnectionConfig{\n    Host:     "localhost",\n    Port:     3306,\n    Database: "myapp",\n    Username: "myapp_user",\n    Password: "password",\n    Charset:  "utf8mb4",\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"pool-de-connexions",children:"Pool de Connexions"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'orm := builder.NewSimpleORM().\n    WithMySQL().\n    WithQuickConfig("localhost", "myapp", "user", "password").\n    WithConnectionPool(10, 5, time.Hour). // max, idle, lifetime\n    RegisterModels(&User{})\n'})}),"\n",(0,o.jsx)(e.h2,{id:"cache",children:"Cache"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'orm := builder.NewSimpleORM().\n    WithMySQL().\n    WithQuickConfig("localhost", "myapp", "user", "password").\n    WithCache(time.Minute * 5). // TTL\n    RegisterModels(&User{})\n'})}),"\n",(0,o.jsx)(e.h2,{id:"logs",children:"Logs"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'orm := builder.NewSimpleORM().\n    WithMySQL().\n    WithQuickConfig("localhost", "myapp", "user", "password").\n    EnableQueryLog(). // Active les logs SQL\n    RegisterModels(&User{})\n'})}),"\n",(0,o.jsx)(e.h2,{id:"migrations",children:"Migrations"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'// Cr\xe9ation automatique des tables\nif err := orm.Migrate(); err != nil {\n    log.Fatal("Erreur de migration:", err)\n}\n\n// Suppression des tables\nif err := orm.DropTable(&User{}); err != nil {\n    log.Fatal("Erreur de suppression:", err)\n}\n\n// Cr\xe9ation d\'une table sp\xe9cifique\nif err := orm.CreateTable(&User{}); err != nil {\n    log.Fatal("Erreur de cr\xe9ation:", err)\n}\n'})})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>s,x:()=>l});var i=r(6540);const o={},a=i.createContext(o);function s(n){const e=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);