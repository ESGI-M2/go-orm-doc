"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9309],{7183:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"library/repository","title":"Repository","description":"Le Repository encapsule toutes les op\xe9rations de persistance pour un mod\xe8le donn\xe9.","source":"@site/docs/library/repository.md","sourceDirName":"library","slug":"/library/repository","permalink":"/go-orm-doc/docs/library/repository","draft":false,"unlisted":false,"editUrl":"https://github.com/ESGI-M2/GO/tree/main/docs/docs/library/repository.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docs","previous":{"title":"Mod\xe8les","permalink":"/go-orm-doc/docs/library/models"},"next":{"title":"Query Builder","permalink":"/go-orm-doc/docs/library/query-builder"}}');var s=n(4848),o=n(8453);const t={sidebar_position:6},l="Repository",a={},c=[{value:"Op\xe9rations de base",id:"op\xe9rations-de-base",level:2},{value:"Cr\xe9ation d&#39;un repository",id:"cr\xe9ation-dun-repository",level:3},{value:"Lecture",id:"lecture",level:3},{value:"Cr\xe9ation",id:"cr\xe9ation",level:3},{value:"Mise \xe0 jour",id:"mise-\xe0-jour",level:3},{value:"Suppression",id:"suppression",level:3},{value:"Fonctionnalit\xe9s avanc\xe9es",id:"fonctionnalit\xe9s-avanc\xe9es",level:2},{value:"Hooks",id:"hooks",level:3},{value:"Traitement par lots",id:"traitement-par-lots",level:3},{value:"Utilitaires",id:"utilitaires",level:3}];function d(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"repository",children:"Repository"})}),"\n",(0,s.jsx)(r.p,{children:"Le Repository encapsule toutes les op\xe9rations de persistance pour un mod\xe8le donn\xe9."}),"\n",(0,s.jsx)(r.h2,{id:"op\xe9rations-de-base",children:"Op\xe9rations de base"}),"\n",(0,s.jsx)(r.h3,{id:"cr\xe9ation-dun-repository",children:"Cr\xe9ation d'un repository"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:"repo := orm.Repository(&User{})\n"})}),"\n",(0,s.jsx)(r.h3,{id:"lecture",children:"Lecture"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:'// Trouver par ID\nuser, err := repo.Find(1)\n\n// Trouver tous les enregistrements\nusers, err := repo.FindAll()\n\n// Trouver avec crit\xe8res\ncriteria := map[string]interface{}{\n    "age": 18,\n    "active": true,\n}\nusers, err := repo.FindBy(criteria)\n\n// Trouver un seul avec crit\xe8res\nuser, err := repo.FindOneBy(criteria)\n\n// Avec relations\nuser, err := repo.FindWithRelations(1, "posts", "profile")\nusers, err := repo.FindAllWithRelations("posts", "profile")\n'})}),"\n",(0,s.jsx)(r.h3,{id:"cr\xe9ation",children:"Cr\xe9ation"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:'user := &User{Name: "Alice", Email: "alice@example.com"}\n\n// Cr\xe9ation simple\nif err := repo.Create(user); err != nil {\n    log.Fatal(err)\n}\n\n// Cr\xe9ation en lot\nusers := []*User{\n    {Name: "Alice"},\n    {Name: "Bob"},\n}\nif err := repo.BatchCreate(users); err != nil {\n    log.Fatal(err)\n}\n'})}),"\n",(0,s.jsx)(r.h3,{id:"mise-\xe0-jour",children:"Mise \xe0 jour"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:'// Mise \xe0 jour en lot\nusers[0].Name = "Alice Updated"\nusers[1].Name = "Bob Updated"\nif err := repo.BatchUpdate(users); err != nil {\n    log.Fatal(err)\n}\n'})}),"\n",(0,s.jsx)(r.h3,{id:"suppression",children:"Suppression"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:'// Soft delete\nif err := repo.SoftDelete(user); err != nil {\n    log.Fatal(err)\n}\n\n// Soft delete avec crit\xe8res\ncriteria := map[string]interface{}{"inactive": true}\nif err := repo.SoftDeleteBy(criteria); err != nil {\n    log.Fatal(err)\n}\n\n// Restauration\nif err := repo.Restore(user); err != nil {\n    log.Fatal(err)\n}\n\n// Restauration avec crit\xe8res\nif err := repo.RestoreBy(criteria); err != nil {\n    log.Fatal(err)\n}\n\n// Trouver les \xe9l\xe9ments supprim\xe9s\ntrashed, err := repo.FindTrashed()\n\n// Suppression d\xe9finitive\nif err := repo.ForceDelete(user); err != nil {\n    log.Fatal(err)\n}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"fonctionnalit\xe9s-avanc\xe9es",children:"Fonctionnalit\xe9s avanc\xe9es"}),"\n",(0,s.jsx)(r.h3,{id:"hooks",children:"Hooks"}),"\n",(0,s.jsx)(r.p,{children:"Les hooks sont automatiquement d\xe9tect\xe9s et ex\xe9cut\xe9s :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:'type User struct {\n    ID   int\n    Name string\n}\n\nfunc (u *User) BeforeCreate() error {\n    // Validation avant cr\xe9ation\n    if u.Name == "" {\n        return errors.New("name is required")\n    }\n    return nil\n}\n\nfunc (u *User) AfterCreate() error {\n    // Actions post-cr\xe9ation\n    return nil\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"Hooks disponibles :"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"BeforeCreate/AfterCreate"}),"\n",(0,s.jsx)(r.li,{children:"BeforeSave/AfterSave"}),"\n",(0,s.jsx)(r.li,{children:"BeforeUpdate/AfterUpdate"}),"\n",(0,s.jsx)(r.li,{children:"BeforeDelete/AfterDelete"}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"traitement-par-lots",children:"Traitement par lots"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:"// Traiter les enregistrements par lots\nerr := repo.Chunk(100, func(users []interface{}) error {\n    for _, user := range users {\n        // Traitement\n    }\n    return nil\n})\n\n// Traiter chaque enregistrement\nerr := repo.Each(func(user interface{}) error {\n    // Traitement\n    return nil\n})\n"})}),"\n",(0,s.jsx)(r.h3,{id:"utilitaires",children:"Utilitaires"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-go",children:'// Compter les enregistrements\ncount, err := repo.Count()\n\n// V\xe9rifier l\'existence\nexists, err := repo.Exists(1)\n\n// R\xe9cup\xe9rer une colonne\nemails, err := repo.Pluck("email")\n\n// R\xe9cup\xe9rer une seule valeur\nemail, err := repo.Value("email")\n\n// Incr\xe9menter/D\xe9cr\xe9menter\nerr := repo.Increment("points", 5)\nerr := repo.Decrement("points", 3)\n'})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["Pour des requ\xeates plus complexes, utilisez le ",(0,s.jsx)(r.a,{href:"/go-orm-doc/docs/library/query-builder",children:"Query Builder"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);